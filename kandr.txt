<para>Alapismeretek</para>
<para>A könyv első fejezete a C nyelv alapismereteinek elsajátitásairól szól, bonyolódás nélkül. 
Bemelegités képpen a képernyőre való kiiratás egyszerű megvalósitását ismerjük meg a printf használatával.
Megismerjük a Fahrenheit-hőmérséklet Celsius-értékké alakitásának egyszerű megoldását is, valamint a változó tipusokat(int,float..).
A legismertebb ismétlő ciklusokkal is találkozhatunk, azaz a while-al és a for-al.
Bevezetést kapunk a szimbolikus állandók fogalmába is, néhány alapvető függvényt ismerünk meg(getchar(),putchar()),
Néhány nap mint nap használt eljárást is találhatunk: karakterek számlálása, szavak számlálása, sorok számlálása, valamint tömbök, függvények, argumentumok és érték szerinti hivások fogalmát is letiztázhatjuk a fejezet elolvasásával.
</para>
<para>Tipusok, operátorok, kifejezések</para>
<para>
Ebben a fejezetben ismerkedünk meg a változónevek szabályaival, hogyan és mint kell használni azokat, valamint tovább boncoljuk az adattipusokat és a hozzá kapcsolódó méreteket.
A matematikai állandók is szóbajönnek, mint pl. az e vagy pi, de állandó létrehozást is kifejtik a fejezetben.
A deklarációk fogalma sem maradhat ki, hiszen ezek nélkül használhatatlanak lennének a tipusok, operátorok, kifejezések, változók.. egyszóval minden.
Megismerkedhetünk az aritmetikai operátorokkal, amikkel minden ember megismerkedik egyszer, de most C környezetben.
A relációs és logikai operátorok már kicsit elvontabb témakör, ezzel nem épp mindenki találkozik de ezek is roppant hasznosak a programozásban.
A tipuskonverziók témaköre rendkivül hasznos számunkra, ebbe is betekintést nyerhetünk, és megtudhatjuk, hogy csak az értelmes konverziók történnek meg.
Az inkrementáló, dekrementáló operátorok is szóbajönnek, amik szintén alap szintű felfogást igényelnek a megértéshez, valamint a bitenkénti logikai operátorok is szóbajönnek, amik kicsit már bonyolultabbak, de megérthetőek szintén(&,|,^ stb.).
Értékadó operárotok, feltételes kifejezések, precedencia(kiértékelés sorrendje) szépen ki van vesézve, érthetően és pontosan.
</para>
<para>Vezérlési szerkezetek</para>
<para>
Itt ismerjük meg az utasitásokat és blokkokat, valamint az if-else utasitást, else-if utasitást, switch utasitást, while, for utasitást, do-while utasitást, break utasitást, continue utasitást, goto utasitást, cimkéket. 
Ezek a fogalmak mind szépen taglalva vannak, és kapcsolódnak szorosan az előző fejezetekhez is, valamint érthető magyarázatok és példákkal vannak illusztrálva azok. 
Ezek mind fontos "alapfoglamak" , ugymond fegyverek a C nyelvben, amiket akkor használunk, amikor akarunk, attól függ, hogy mikor melyiket látjuk a legelőnyösebbnek.
Fontos ezeket megjegyezni, mert tulajdonképpen alapkövek a C nyelvben, és más nyelvekben is előkerülnek, lehet hogy más formában, de előkerülnek. Egyszerűek, meg lehet őket jegyezni,
sok gyakorlással és alkalmazással meg a kisujjunkba kerülhetnek.
</para>
<para>Függvények és programstruktúra</para>
<para>
Ebben a fejezetben a függvényeket és a program felépitési szabályait vesézzük ki. Minden apró fontos csavar jó helyre illesztése eredményezheti csupán a program működését.
A függvények előnyeiről, hasznosságáról találhatunk példákat, valamint konkrét programrészleteket, helyes és működő programstruktúrákról.
Megismerhetjük a függvények minden fajtáját, alágát, ilyen akár a nem egész tipus értékkel visszatérő függvény.
Külső változók, regiszter változók, érvényességi tartomány szabályai sem marad ki a boncolásból, ezeket is nagyon érthetően elemzi a könyv, és a kiváló példákkal elülteti az ember agyában.
Statikus változók és a blokkstruktúra is megjelenik, valamint további nyelvekkel kerül összehasonlitásba a C nyelv.
Az inicializálás, rekurzió, C előfeldolgozó, Állomány beiktatás és makrohelyettesités témakörei is taglalva vannak, szépen sorrendben.
</para>
<para>Utasitások</para>
<para>
Az  utasitások egymást követően sorban hajtódnak vége. Több fajtáját is megkülönböztetjük az utasitásoknak:
</para>
<para>Kifejezés utasitás: értékadások, függvényhivások.</para>
<para>Összetett utasitás/blokk: ahol elvileg egy utasitás helyezhető el, ott a blokk használatával többet is használhatunk.</para>
<para>Feltételes utasitás: Akkor használjuk, ha két lehetőségből kell választani. if-else a példa rá, ha az if igaz akkor azt végzi el, különben az else ágat.</para>
<para>While utasitás: Végrehajtódik az utasitás mindaddig amig amig a kifejezés értéke nemnulla marad.</para>
<para>Do-while utasitás: Mindaddig ismétlődik az utasitás amig a kifejezés értéke nullává nem válik.</para>
<para>For utasitás: Képesek vagyunk megadni, hogy hányszor hajtódjon végre az utasitás, és hogy mi legyen a feltétel.</para>
<para>Switch utasitás: ez a többágú feltételes utasitás: egy kifejezést több esetre bonthatunk, case:-kre valamint van egy default: eset is.</para>
<para>Break utasitás: Befejeződik az őt körülvevő while, do-while, for vagy switch utasitás.</para>
<para>Continue: átugorja a többi utasitást és az őt körülvevő while,do-while,for utasitás ciklusfolytató részére ugrik a vezérlés.</para>
<para>Return utasitás: A függvény a hivójához a return utasitással tér vissza. </para>
<para>Goto utasitás: a vezérlés feltétel nélkül adható át az adott helyre.</para>
<para>Cimkézett utasitás: Azutasitások cimkével láthatók el, amely a goto célpontjaként szolgál.</para>
<para>Nulla utasitás: hordozhat cimkét, vagy képezhet üres ciklustörzset.</para>